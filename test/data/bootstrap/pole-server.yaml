# Tencent is pleased to support the open source community by making Polaris available.
#
# Copyright (C) 2019 THL A29 Limited, a Tencent company. All rights reserved.
#
# Licensed under the BSD 3-Clause License (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# https://opensource.org/licenses/BSD-3-Clause
#
# Unless required by applicable law or agreed to in writing, software distributed
# under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR
# CONDITIONS OF ANY KIND, either express or implied. See the License for the
# specific language governing permissions and limitations under the License.

# server Start guidance configuration
bootstrap:
  # Global log
  logger:
    # Log scope name
    # Configuration center related logs
    config:
      # Log file location
      rotateOutputPath: test/output/logs/runtime/pole-config.log
      # Special records of error log files at ERROR level
      errorRotateOutputPath: test/output/logs/runtime/pole-config-error.log
      # The maximum size of a single log file, 100 default, the unit is MB
      rotationMaxSize: 100
      # How many log files are saved, default 30
      rotationMaxBackups: 30
      # The maximum preservation days of a single log file, default 7
      rotationMaxAge: 7
      # Log output levelï¼Œdebug/info/warn/error
      outputLevel: debug
      # Open the log file compression
      compress: true
      # onlyContent just print log content, not print log timestamp
      # onlyContent: false
    # Resource Auth, User Management Log
    auth:
      rotateOutputPath: test/output/logs/runtime/pole-auth.log
      errorRotateOutputPath: test/output/logs/runtime/pole-auth-error.log
      rotationMaxSize: 100
      rotationMaxBackups: 30
      rotationMaxAge: 7
      outputLevel: debug
      compress: true
      outputPaths:
      - stdout
      errorOutputPaths:
      - stderr
    # Storage layer log
    store:
      rotateOutputPath: test/output/logs/runtime/pole-store.log
      errorRotateOutputPath: test/output/logs/runtime/pole-store-error.log
      rotationMaxSize: 100
      rotationMaxBackups: 30
      rotationMaxAge: 7
      outputLevel: debug
      compress: true
    # Server cache log log
    cache:
      rotateOutputPath: test/output/logs/runtime/pole-cache.log
      errorRotateOutputPath: test/output/logs/runtime/pole-cache-error.log
      rotationMaxSize: 100
      rotationMaxBackups: 30
      rotationMaxAge: 7
      outputLevel: error
      compress: true
    # Service discovery and governance rules related logs
    naming:
      rotateOutputPath: test/output/logs/runtime/pole-naming.log
      errorRotateOutputPath: test/output/logs/runtime/pole-naming-error.log
      rotationMaxSize: 100
      rotationMaxBackups: 30
      rotationMaxAge: 7
      outputLevel: debug
      compress: true
    # Service discovery institutional health check log
    healthcheck:
      rotateOutputPath: test/output/logs/runtime/pole-healthcheck.log
      errorRotateOutputPath: test/output/logs/runtime/pole-healthcheck-error.log
      rotationMaxSize: 100
      rotationMaxBackups: 30
      rotationMaxAge: 7
      outputLevel: debug
      compress: true
    # XDS protocol layer plug -in log
    xdsv3:
      rotateOutputPath: test/output/logs/runtime/pole-xdsv3.log
      errorRotateOutputPath: test/output/logs/runtime/pole-xdsv3-error.log
      rotationMaxSize: 100
      rotationMaxBackups: 30
      rotationMaxAge: 7
      outputLevel: info
      compress: true
    # Eureka protocol layer plugin log
    eureka:
      rotateOutputPath: test/output/logs/runtime/pole-eureka.log
      errorRotateOutputPath: test/output/logs/runtime/pole-eureka-error.log
      rotationMaxSize: 100
      rotationMaxBackups: 30
      rotationMaxAge: 7
      outputLevel: debug
      compress: true
    # Nacos protocol layer plug -in log
    nacos-apiserver:
      rotateOutputPath: test/output/logs/runtime/nacos-apiserver.log
      errorRotateOutputPath: test/output/logs/runtime/nacos-apiserver-error.log
      rotationMaxSize: 100
      rotationMaxBackups: 30
      rotationMaxAge: 7
      outputLevel: debug
      compress: true
    # APISERVER common log, record inbound request and outbound response
    apiserver:
      rotateOutputPath: test/output/logs/runtime/pole-apiserver.log
      errorRotateOutputPath: test/output/logs/runtime/pole-apiserver-error.log
      rotationMaxSize: 100
      rotationMaxBackups: 30
      rotationMaxAge: 7
      outputLevel: debug
      compress: true
      outputPaths:
      - stdout
      errorOutputPaths:
      - stderr
    default:
      rotateOutputPath: test/output/logs/runtime/pole-default.log
      errorRotateOutputPath: test/output/logs/runtime/pole-default-error.log
      rotationMaxSize: 100
      rotationMaxBackups: 30
      rotationMaxAge: 7
      outputLevel: info
      compress: true
      outputPaths:
      - stdout
      errorOutputPaths:
      - stderr
    # server plugin logs
    token-bucket:
      rotateOutputPath: test/output/logs/runtime/pole-ratelimit.log
      errorRotateOutputPath: test/output/logs/runtime/pole-ratelimit-error.log
      rotationMaxSize: 100
      rotationMaxBackups: 30
      rotationMaxAge: 7
      outputLevel: debug
      compress: true
    discoverstat:
      rotateOutputPath: test/output/logs/statis/pole-discoverstat.log
      errorRotateOutputPath: test/output/logs/statis/pole-discoverstat-error.log
      rotationMaxSize: 100
      rotationMaxBackups: 30
      rotationMaxAge: 7
      outputLevel: debug
      compress: true
      onlyContent: true
    local:
      rotateOutputPath: test/output/logs/statis/pole-statis.log
      errorRotateOutputPath: test/output/logs/statis/pole-statis-error.log
      rotationMaxSize: 100
      rotationMaxBackups: 30
      rotationMaxAge: 7
      outputLevel: debug
      compress: true
    HistoryLogger:
      rotateOutputPath: test/output/logs/operation/pole-history.log
      errorRotateOutputPath: test/output/logs/operation/pole-history-error.log
      rotationMaxSize: 100
      rotationMaxBackups: 10
      rotationMaxAge: 7
      rotationMaxDurationForHour: 24
      outputLevel: debug
      onlyContent: true
    discoverEventLocal:
      rotateOutputPath: test/output/logs/event/pole-discoverevent.log
      errorRotateOutputPath: test/output/logs/event/pole-discoverevent-error.log
      rotationMaxSize: 100
      rotationMaxBackups: 30
      rotationMaxAge: 7
      outputLevel: debug
      onlyContent: true
    cmdb:
      rotateOutputPath: test/output/logs/runtime/pole-cmdb.log
      errorRotateOutputPath: test/output/logs/runtime/pole-cmdb-error.log
      rotationMaxSize: 100
      rotationMaxBackups: 30
      rotationMaxAge: 7
      outputLevel: debug
      compress: true
  # Start the server in order
  startInOrder:
    # Start the pole-server in order, mainly to avoid data synchronization logic when the server starts the DB to pull the DB out of high load
    open: true
    # The name of the start lock
    key: sz
  # Register as Arctic Star Service
  polaris_service:
    ## level: self_address > network_inter > probe_address
    ## Obtain the IP of the VM or POD where Polaris is located by making a TCP connection with the probe_adreess address
    # probe_address: ##DB_ADDR##
    ## Set the name of the gateway to get your own IP
    # network_inter: eth0
    ## Show the setting node itself IP information
    # self_address: 127.0.0.1
    # disable_heartbeat disable pole_server node run heartbeat action to keep lease polaris_service
    # disable_heartbeat: true
    # Whether to open the server to register
    enable_register: true
    # Registered North Star Server Examples isolation status
    isolated: false
    # Service information that needs to be registered
    services:
      # service name
      - name: pole.checker
        # Set the port protocol information that requires registration
        protocols:
          - service-grpc
# apiserver Configuration
apiservers:
  # apiserver plugin name
  - name: service-eureka
    # apiserver additional configuration
    option:
      # tcp server listen ip
      listenIP: "0.0.0.0"
      # tcp server listen port
      listenPort: 8761
      # set the polaris namingspace of the EUREKA service default
      namespace: default
      # pull data from the cache of the polaris, refresh the data cache in the Eureka protocol
      refreshInterval: 10
      # eureka incremental instance changes time cache expiration cycle
      deltaExpireInterval: 60
      # unhealthy instance expiration cycle
      unhealthyExpireInterval: 180
      # whether to enable an instance ID of polaris to generate logic
      generateUniqueInstId: false
      # TCP connection number limit
      connLimit:
        # Whether to turn on the TCP connection limit function, default FALSE
        openConnLimit: false
        # The number of connections with the most IP
        maxConnPerHost: 1024
        # Current Listener's maximum number of connections
        maxConnLimit: 10240
        # Whitening list ip list, English comma separation
        whiteList: 127.0.0.1
        # Cleaning the cycle of link behavior
        purgeCounterInterval: 10s
        # How long does the unpretentious link clean up
        purgeCounterExpired: 5s
  - name: api-http
    option:
      listenIP: "0.0.0.0"
      listenPort: 8090
      # debug pprof switch
      enablePprof: true
      # swagger docs switch
      enableSwagger: true
      connLimit:
        openConnLimit: false
        maxConnPerHost: 128
        maxConnLimit: 5120
        whiteList: 127.0.0.1
        purgeCounterInterval: 10s
        purgeCounterExpired: 5s
      # Referenced from: [Pull Requests 387], in order to improve the processing of service discovery QPS when using api-http server
      enableCacheProto: false
      # Cache default size
      sizeCacheProto: 128
    # Set the type of open API interface
    api:
      # admin OpenAPI interface
      admin:
        enable: true
      # aimcp OpenAPI interface
      aimcp:
        enable: true
        # OpenAPI group that needs to be exposed
        include: [default]
      # Console OpenAPI interface
      console:
        enable: true
        # OpenAPI group that needs to be exposed
        include: [default, service, config]
      # client OpenAPI interface
      client:
        enable: true
        include: [discover, register, healthcheck, config]
    # Polaris is a client protocol layer based on the gRPC protocol, which is used for registration discovery and service governance rule delivery
  - name: service-grpc
    option:
      listenIP: "0.0.0.0"
      listenPort: 8091
      connLimit:
        openConnLimit: false
        maxConnPerHost: 128
        maxConnLimit: 5120
      # Open the protobuf parsing cache, cache the protobuf serialization results of the same content, and improve the processing of service discovery QPS
      enableCacheProto: true
      # Cache default size
      sizeCacheProto: 128
      # tls setting
      tls:
        # set cert file path
        certFile: ""
        # set key file path
        keyFile: ""
        # set trusted ca file path
        trustedCAFile: ""
    api:
      client:
        enable: true
        include: [discover, register, healthcheck]
  - name: config-grpc
    option:
      listenIP: "0.0.0.0"
      listenPort: 8093
      connLimit:
        openConnLimit: false
        maxConnPerHost: 128
        maxConnLimit: 5120
    api:
      client:
        enable: true
  - name: xds-v3
    option:
      listenIP: "0.0.0.0"
      listenPort: 15010
      connLimit:
        openConnLimit: false
        maxConnPerHost: 128
        maxConnLimit: 10240
  - name: service-nacos
    option:
      listenIP: "0.0.0.0"
      listenPort: 8848
      # Set the nacos default namespace to correspond to the Polaris namespace information
      defaultNamespace: default
      connLimit:
        openConnLimit: false
        maxConnPerHost: 128
        maxConnLimit: 10240
# Core logic configuration
auth:
  # auth's option has migrated to auth.user and auth.strategy
  # it's still available when filling auth.option, but you will receive warning log that auth.option has deprecated.
  user:
    name: defaultUser
    option:
      # Token encrypted SALT, you need to rely on this SALT to decrypt the information of the Token when analyzing the Token
      # The length of SALT needs to satisfy the following oneï¼šlen(salt) in [16, 24, 32]
      salt: pole@@1234567890
  strategy:
    name: defaultStrategy
    option:
      # Console auth switch, default true
      consoleOpen: false
      # Console Strict Model, default true
      consoleStrict: false
      # Customer auth switch, default false
      clientOpen: false
      # Customer Strict Model, default close
      clientStrict: false
namespace:
  # Whether to allow automatic creation of naming space
  autoCreate: true
# Cache configuration
cache:
  # When the incremental synchronization data is cached, the actual incremental data time range is as follows:
  # How many seconds need to be backtracked from the current time, that is,
  # the incremental synchronization at time T [T - abs(DiffTime), âˆž)
  diffTime: 5s
naming:
  # Whether to allow automatic creation of service
  autoCreate: true
  # 
  caches:
    serviceContract:
      cachePath: test/output/cache/service_contract
  # Batch controller
  batch:
    register:
      open: true
      # Task queue cache
      queueSize: 10240
      # The maximum waiting time for the number of mission is not full, and the time is directly forced to launch the BATCH operation
      waitTime: 32ms
      # Number of BATCH
      maxBatchCount: 128
      # Number of workers in the batch task
      concurrency: 128
      # Whether to turn on the discarding expiration task is only used for the batch controller of the register type
      dropExpireTask: true
      # The maximum validity period of the task is that the task is not executed when the validity period exceeds the validity period.
      taskLife: 30s
    deregister:
      open: true
      queueSize: 10240
      waitTime: 32ms
      maxBatchCount: 128
      concurrency: 128
  # Configuration of health check
  healthcheck:
    # Whether to open the health check function module
    open: true
    # The service of the instance of the health inspection task
    service: pole.checker
    # Time wheel parameters
    slotNum: 30
    # It is used to adjust the next execution time of instance health check tasks in the time wheel, limit the minimum inspection cycle
    minCheckInterval: 1s
    # It is used to adjust the next execution time of instance health inspection tasks in the time wheel, limit the maximum inspection cycle
    maxCheckInterval: 30s
    # Used to adjust the next execution time of SDK reporting instance health checking tasks in the time wheel
    clientReportInterval: 120s
    batch:
      heartbeat:
        open: true
        queueSize: 10240
        waitTime: 32ms
        maxBatchCount: 32
        concurrency: 64
    # Health check plugin list, currently supports heartBeatMemory/heartBeatredis/heartBeatLeader.
    # since the three belong to the same type of health check plugin, only one can be enabled to use one
    checkers:
      - name: heartbeat
# Configuration center module start configuration
config:
  # Whether to start the configuration module
  open: true
  # Maximum number of number of file characters
  contentMaxLength: 20000
  caches:
    configFile:
      cachePath: test/output/cache/config_file
# Maintain configuration
maintain:
  jobs:
    # Clean up long term unhealthy instance
    - name: DeleteUnHealthyInstance
      enable: false
      option:
        # Valid time units are "ns", "us" (or "Âµs"), "ms", "s", "m", "h".
        instanceDeleteTimeout: 60m
    # Delete auto-created service without an instance
    - name: DeleteEmptyAutoCreatedService
      enable: false
      option:
        # Valid time units are "ns", "us" (or "Âµs"), "ms", "s", "m", "h".
        serviceDeleteTimeout: 30m
    # Clean soft deleted resources
    - name: CleanDeletedResources
      enable: true
      option:
        timeout: 1h
# Storage configuration
store:
  # Database storage plugin
  name: defaultStore
  option:
    master:
      dbType: mysql
      dbName: pole_server
      dbUser: ${MYSQL_USER} ##DB_USER##
      dbPwd: ${MYSQL_PWD} ##DB_PWD##
      dbAddr: ${MYSQL_HOST} ##DB_ADDR##
      maxOpenConns: 300
      maxIdleConns: 50
      connMaxLifetime: 300 # Unit second
      txIsolationLevel: 2 #LevelReadCommitted
# sergo-server plugin settings
plugin:
  crypto:
    entries:
      - name: AES
  cmdb:
    name: memory
    option:
      url: ""
      interval: 60s
  history:
    entries:
      - name: HistoryLogger
  discoverEvent:
    entries:
      - name: local
  statis:
    entries:
      - name: local
        option:
          interval: 60
      - name: prometheus
  ratelimit:
    name: token-bucket
    option:
      enable: false
      rule-file: ./conf/plugin/ratelimit/rule.yaml
