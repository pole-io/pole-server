// Code generated by apiserver/httpserver/i18n/cmd/gen.go; DO NOT EDIT.
/**
 * Tencent is pleased to support the open source community by making Polaris available.
 *
 * Copyright (C) 2019 THL A29 Limited, a Tencent company. All rights reserved.
 *
 * Licensed under the BSD 3-Clause License (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * https://opensource.org/licenses/BSD-3-Clause
 *
 * Unless required by applicable law or agreed to in writing, software distributed
 * under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR
 * CONDITIONS OF ANY KIND, either express or implied. See the License for the
 * specific language governing permissions and limitations under the License.
 */

package i18n

import (
	"fmt"

	ii18n "github.com/nicksnyder/go-i18n/v2/i18n"

	api "github.com/pole-io/pole-server/pkg/common/api/v1"
)

func init() {
	i18nMsgCache = map[uint32]*ii18n.Message{
		api.ExecuteSuccess:                         {ID: fmt.Sprint(api.ExecuteSuccess)},
		api.DataNoChange:                           {ID: fmt.Sprint(api.DataNoChange)},
		api.NoNeedUpdate:                           {ID: fmt.Sprint(api.NoNeedUpdate)},
		api.BadRequest:                             {ID: fmt.Sprint(api.BadRequest)},
		api.ParseException:                         {ID: fmt.Sprint(api.ParseException)},
		api.EmptyRequest:                           {ID: fmt.Sprint(api.EmptyRequest)},
		api.BatchSizeOverLimit:                     {ID: fmt.Sprint(api.BatchSizeOverLimit)},
		api.InvalidDiscoverResource:                {ID: fmt.Sprint(api.InvalidDiscoverResource)},
		api.InvalidRequestID:                       {ID: fmt.Sprint(api.InvalidRequestID)},
		api.InvalidUserName:                        {ID: fmt.Sprint(api.InvalidUserName)},
		api.InvalidUserToken:                       {ID: fmt.Sprint(api.InvalidUserToken)},
		api.InvalidParameter:                       {ID: fmt.Sprint(api.InvalidParameter)},
		api.EmptyQueryParameter:                    {ID: fmt.Sprint(api.EmptyQueryParameter)},
		api.InvalidQueryInsParameter:               {ID: fmt.Sprint(api.InvalidQueryInsParameter)},
		api.InvalidNamespaceName:                   {ID: fmt.Sprint(api.InvalidNamespaceName)},
		api.InvalidNamespaceOwners:                 {ID: fmt.Sprint(api.InvalidNamespaceOwners)},
		api.InvalidNamespaceToken:                  {ID: fmt.Sprint(api.InvalidNamespaceToken)},
		api.InvalidServiceName:                     {ID: fmt.Sprint(api.InvalidServiceName)},
		api.InvalidServiceOwners:                   {ID: fmt.Sprint(api.InvalidServiceOwners)},
		api.InvalidServiceToken:                    {ID: fmt.Sprint(api.InvalidServiceToken)},
		api.InvalidServiceMetadata:                 {ID: fmt.Sprint(api.InvalidServiceMetadata)},
		api.InvalidServicePorts:                    {ID: fmt.Sprint(api.InvalidServicePorts)},
		api.InvalidServiceBusiness:                 {ID: fmt.Sprint(api.InvalidServiceBusiness)},
		api.InvalidServiceDepartment:               {ID: fmt.Sprint(api.InvalidServiceDepartment)},
		api.InvalidServiceCMDB:                     {ID: fmt.Sprint(api.InvalidServiceCMDB)},
		api.InvalidServiceComment:                  {ID: fmt.Sprint(api.InvalidServiceComment)},
		api.InvalidServiceAliasComment:             {ID: fmt.Sprint(api.InvalidServiceAliasComment)},
		api.InvalidInstanceID:                      {ID: fmt.Sprint(api.InvalidInstanceID)},
		api.InvalidInstanceHost:                    {ID: fmt.Sprint(api.InvalidInstanceHost)},
		api.InvalidInstancePort:                    {ID: fmt.Sprint(api.InvalidInstancePort)},
		api.InvalidServiceAlias:                    {ID: fmt.Sprint(api.InvalidServiceAlias)},
		api.InvalidNamespaceWithAlias:              {ID: fmt.Sprint(api.InvalidNamespaceWithAlias)},
		api.InvalidServiceAliasOwners:              {ID: fmt.Sprint(api.InvalidServiceAliasOwners)},
		api.InvalidInstanceProtocol:                {ID: fmt.Sprint(api.InvalidInstanceProtocol)},
		api.InvalidInstanceVersion:                 {ID: fmt.Sprint(api.InvalidInstanceVersion)},
		api.InvalidInstanceLogicSet:                {ID: fmt.Sprint(api.InvalidInstanceLogicSet)},
		api.InvalidInstanceIsolate:                 {ID: fmt.Sprint(api.InvalidInstanceIsolate)},
		api.HealthCheckNotOpen:                     {ID: fmt.Sprint(api.HealthCheckNotOpen)},
		api.HeartbeatOnDisabledIns:                 {ID: fmt.Sprint(api.HeartbeatOnDisabledIns)},
		api.HeartbeatExceedLimit:                   {ID: fmt.Sprint(api.HeartbeatExceedLimit)},
		api.HeartbeatTypeNotFound:                  {ID: fmt.Sprint(api.HeartbeatTypeNotFound)},
		api.InvalidMetadata:                        {ID: fmt.Sprint(api.InvalidMetadata)},
		api.InvalidRateLimitID:                     {ID: fmt.Sprint(api.InvalidRateLimitID)},
		api.InvalidRateLimitLabels:                 {ID: fmt.Sprint(api.InvalidRateLimitLabels)},
		api.InvalidRateLimitAmounts:                {ID: fmt.Sprint(api.InvalidRateLimitAmounts)},
		api.InvalidRateLimitName:                   {ID: fmt.Sprint(api.InvalidRateLimitName)},
		api.InvalidCircuitBreakerID:                {ID: fmt.Sprint(api.InvalidCircuitBreakerID)},
		api.InvalidCircuitBreakerVersion:           {ID: fmt.Sprint(api.InvalidCircuitBreakerVersion)},
		api.InvalidCircuitBreakerName:              {ID: fmt.Sprint(api.InvalidCircuitBreakerName)},
		api.InvalidCircuitBreakerNamespace:         {ID: fmt.Sprint(api.InvalidCircuitBreakerNamespace)},
		api.InvalidCircuitBreakerOwners:            {ID: fmt.Sprint(api.InvalidCircuitBreakerOwners)},
		api.InvalidCircuitBreakerToken:             {ID: fmt.Sprint(api.InvalidCircuitBreakerToken)},
		api.InvalidCircuitBreakerBusiness:          {ID: fmt.Sprint(api.InvalidCircuitBreakerBusiness)},
		api.InvalidCircuitBreakerDepartment:        {ID: fmt.Sprint(api.InvalidCircuitBreakerDepartment)},
		api.InvalidCircuitBreakerComment:           {ID: fmt.Sprint(api.InvalidCircuitBreakerComment)},
		api.ServicesExistedMesh:                    {ID: fmt.Sprint(api.ServicesExistedMesh)},
		api.ResourcesExistedMesh:                   {ID: fmt.Sprint(api.ResourcesExistedMesh)},
		api.InvalidMeshParameter:                   {ID: fmt.Sprint(api.InvalidMeshParameter)},
		api.InvalidPlatformID:                      {ID: fmt.Sprint(api.InvalidPlatformID)},
		api.InvalidPlatformName:                    {ID: fmt.Sprint(api.InvalidPlatformName)},
		api.InvalidPlatformDomain:                  {ID: fmt.Sprint(api.InvalidPlatformDomain)},
		api.InvalidPlatformQPS:                     {ID: fmt.Sprint(api.InvalidPlatformQPS)},
		api.InvalidPlatformToken:                   {ID: fmt.Sprint(api.InvalidPlatformToken)},
		api.InvalidPlatformOwner:                   {ID: fmt.Sprint(api.InvalidPlatformOwner)},
		api.InvalidPlatformDepartment:              {ID: fmt.Sprint(api.InvalidPlatformDepartment)},
		api.InvalidPlatformComment:                 {ID: fmt.Sprint(api.InvalidPlatformComment)},
		api.NotFoundPlatform:                       {ID: fmt.Sprint(api.NotFoundPlatform)},
		api.InvalidFluxRateLimitId:                 {ID: fmt.Sprint(api.InvalidFluxRateLimitId)},
		api.InvalidFluxRateLimitQps:                {ID: fmt.Sprint(api.InvalidFluxRateLimitQps)},
		api.InvalidFluxRateLimitSetKey:             {ID: fmt.Sprint(api.InvalidFluxRateLimitSetKey)},
		api.ExistedResource:                        {ID: fmt.Sprint(api.ExistedResource)},
		api.NotFoundResource:                       {ID: fmt.Sprint(api.NotFoundResource)},
		api.NamespaceExistedServices:               {ID: fmt.Sprint(api.NamespaceExistedServices)},
		api.ServiceExistedInstances:                {ID: fmt.Sprint(api.ServiceExistedInstances)},
		api.ServiceExistedRoutings:                 {ID: fmt.Sprint(api.ServiceExistedRoutings)},
		api.ServiceExistedRateLimits:               {ID: fmt.Sprint(api.ServiceExistedRateLimits)},
		api.ExistReleasedConfig:                    {ID: fmt.Sprint(api.ExistReleasedConfig)},
		api.SameInstanceRequest:                    {ID: fmt.Sprint(api.SameInstanceRequest)},
		api.ServiceExistedCircuitBreakers:          {ID: fmt.Sprint(api.ServiceExistedCircuitBreakers)},
		api.ServiceExistedAlias:                    {ID: fmt.Sprint(api.ServiceExistedAlias)},
		api.NamespaceExistedMeshResources:          {ID: fmt.Sprint(api.NamespaceExistedMeshResources)},
		api.NamespaceExistedCircuitBreakers:        {ID: fmt.Sprint(api.NamespaceExistedCircuitBreakers)},
		api.ServiceSubscribedByMeshes:              {ID: fmt.Sprint(api.ServiceSubscribedByMeshes)},
		api.ServiceExistedFluxRateLimits:           {ID: fmt.Sprint(api.ServiceExistedFluxRateLimits)},
		api.UserExisted:                            {ID: fmt.Sprint(api.UserExisted)},
		api.UserGroupExisted:                       {ID: fmt.Sprint(api.UserGroupExisted)},
		api.AuthStrategyRuleExisted:                {ID: fmt.Sprint(api.AuthStrategyRuleExisted)},
		api.SubAccountExisted:                      {ID: fmt.Sprint(api.SubAccountExisted)},
		api.NamespaceExistedConfigGroups:           {ID: fmt.Sprint(api.NamespaceExistedConfigGroups)},
		api.NotFoundService:                        {ID: fmt.Sprint(api.NotFoundService)},
		api.NotFoundRouting:                        {ID: fmt.Sprint(api.NotFoundRouting)},
		api.NotFoundInstance:                       {ID: fmt.Sprint(api.NotFoundInstance)},
		api.NotFoundServiceAlias:                   {ID: fmt.Sprint(api.NotFoundServiceAlias)},
		api.NotFoundNamespace:                      {ID: fmt.Sprint(api.NotFoundNamespace)},
		api.NotFoundSourceService:                  {ID: fmt.Sprint(api.NotFoundSourceService)},
		api.NotFoundRateLimit:                      {ID: fmt.Sprint(api.NotFoundRateLimit)},
		api.NotFoundCircuitBreaker:                 {ID: fmt.Sprint(api.NotFoundCircuitBreaker)},
		api.NotFoundMasterConfig:                   {ID: fmt.Sprint(api.NotFoundMasterConfig)},
		api.NotFoundTagConfig:                      {ID: fmt.Sprint(api.NotFoundTagConfig)},
		api.NotFoundTagConfigOrService:             {ID: fmt.Sprint(api.NotFoundTagConfigOrService)},
		api.NotFoundUser:                           {ID: fmt.Sprint(api.NotFoundUser)},
		api.NotFoundOwnerUser:                      {ID: fmt.Sprint(api.NotFoundOwnerUser)},
		api.NotFoundUserGroup:                      {ID: fmt.Sprint(api.NotFoundUserGroup)},
		api.NotFoundAuthStrategyRule:               {ID: fmt.Sprint(api.NotFoundAuthStrategyRule)},
		api.ClientAPINotOpen:                       {ID: fmt.Sprint(api.ClientAPINotOpen)},
		api.NotAllowBusinessService:                {ID: fmt.Sprint(api.NotAllowBusinessService)},
		api.InvalidUserOwners:                      {ID: fmt.Sprint(api.InvalidUserOwners)},
		api.InvalidUserID:                          {ID: fmt.Sprint(api.InvalidUserID)},
		api.InvalidUserPassword:                    {ID: fmt.Sprint(api.InvalidUserPassword)},
		api.InvalidUserMobile:                      {ID: fmt.Sprint(api.InvalidUserMobile)},
		api.InvalidUserEmail:                       {ID: fmt.Sprint(api.InvalidUserEmail)},
		api.InvalidUserGroupOwners:                 {ID: fmt.Sprint(api.InvalidUserGroupOwners)},
		api.InvalidUserGroupID:                     {ID: fmt.Sprint(api.InvalidUserGroupID)},
		api.InvalidAuthStrategyOwners:              {ID: fmt.Sprint(api.InvalidAuthStrategyOwners)},
		api.InvalidAuthStrategyName:                {ID: fmt.Sprint(api.InvalidAuthStrategyName)},
		api.InvalidAuthStrategyID:                  {ID: fmt.Sprint(api.InvalidAuthStrategyID)},
		api.InvalidPrincipalType:                   {ID: fmt.Sprint(api.InvalidPrincipalType)},
		api.NotAllowAliasUpdate:                    {ID: fmt.Sprint(api.NotAllowAliasUpdate)},
		api.NotAllowAliasCreateInstance:            {ID: fmt.Sprint(api.NotAllowAliasCreateInstance)},
		api.NotAllowAliasCreateRouting:             {ID: fmt.Sprint(api.NotAllowAliasCreateRouting)},
		api.NotAllowCreateAliasForAlias:            {ID: fmt.Sprint(api.NotAllowCreateAliasForAlias)},
		api.NotAllowAliasCreateRateLimit:           {ID: fmt.Sprint(api.NotAllowAliasCreateRateLimit)},
		api.NotAllowAliasBindRule:                  {ID: fmt.Sprint(api.NotAllowAliasBindRule)},
		api.NotAllowDifferentNamespaceBindRule:     {ID: fmt.Sprint(api.NotAllowDifferentNamespaceBindRule)},
		api.NotAllowModifyDefaultStrategyPrincipal: {ID: fmt.Sprint(api.NotAllowModifyDefaultStrategyPrincipal)},
		api.NotAllowModifyOwnerDefaultStrategy:     {ID: fmt.Sprint(api.NotAllowModifyOwnerDefaultStrategy)},
		api.InvalidRoutingID:                       {ID: fmt.Sprint(api.InvalidRoutingID)},
		api.InvalidRoutingPolicy:                   {ID: fmt.Sprint(api.InvalidRoutingPolicy)},
		api.InvalidRoutingName:                     {ID: fmt.Sprint(api.InvalidRoutingName)},
		api.InvalidRoutingPriority:                 {ID: fmt.Sprint(api.InvalidRoutingPriority)},
		api.InvalidConfigFileGroupName:             {ID: fmt.Sprint(api.InvalidConfigFileGroupName)},
		api.InvalidConfigFileName:                  {ID: fmt.Sprint(api.InvalidConfigFileName)},
		api.InvalidConfigFileContentLength:         {ID: fmt.Sprint(api.InvalidConfigFileContentLength)},
		api.InvalidConfigFileFormat:                {ID: fmt.Sprint(api.InvalidConfigFileFormat)},
		api.InvalidConfigFileTags:                  {ID: fmt.Sprint(api.InvalidConfigFileTags)},
		api.InvalidWatchConfigFileFormat:           {ID: fmt.Sprint(api.InvalidWatchConfigFileFormat)},
		api.NotFoundResourceConfigFile:             {ID: fmt.Sprint(api.NotFoundResourceConfigFile)},
		api.InvalidConfigFileTemplateName:          {ID: fmt.Sprint(api.InvalidConfigFileTemplateName)},
		api.Unauthorized:                           {ID: fmt.Sprint(api.Unauthorized)},
		api.NotAllowedAccess:                       {ID: fmt.Sprint(api.NotAllowedAccess)},
		api.EmptyAutToken:                          {ID: fmt.Sprint(api.EmptyAutToken)},
		api.TokenDisabled:                          {ID: fmt.Sprint(api.TokenDisabled)},
		api.TokenNotExisted:                        {ID: fmt.Sprint(api.TokenNotExisted)},
		api.IPRateLimit:                            {ID: fmt.Sprint(api.IPRateLimit)},
		api.APIRateLimit:                           {ID: fmt.Sprint(api.APIRateLimit)},
		api.CMDBNotFindHost:                        {ID: fmt.Sprint(api.CMDBNotFindHost)},
		api.DataConflict:                           {ID: fmt.Sprint(api.DataConflict)},
		api.InstanceTooManyRequests:                {ID: fmt.Sprint(api.InstanceTooManyRequests)},
		api.ExecuteException:                       {ID: fmt.Sprint(api.ExecuteException)},
		api.StoreLayerException:                    {ID: fmt.Sprint(api.StoreLayerException)},
		api.CMDBPluginException:                    {ID: fmt.Sprint(api.CMDBPluginException)},
		api.ParseRoutingException:                  {ID: fmt.Sprint(api.ParseRoutingException)},
		api.ParseRateLimitException:                {ID: fmt.Sprint(api.ParseRateLimitException)},
		api.ParseCircuitBreakerException:           {ID: fmt.Sprint(api.ParseCircuitBreakerException)},
		api.HeartbeatException:                     {ID: fmt.Sprint(api.HeartbeatException)},
		api.InstanceRegisTimeout:                   {ID: fmt.Sprint(api.InstanceRegisTimeout)},
		api.AuthTokenVerifyException:               {ID: fmt.Sprint(api.AuthTokenVerifyException)},
		api.OperationRoleException:                 {ID: fmt.Sprint(api.OperationRoleException)},
	}
}
